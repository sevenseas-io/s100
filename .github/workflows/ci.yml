on: [push, pull_request]

name: ci

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf]

        include:
          # Test MSRV
          - rust: 1.56.0
            target: x86_64-unknown-linux-gnu

          # Test nightly but don't fail
          - rust: nightly
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Install libxml2
        run: sudo apt-get install -y libxml2-dev
        if: matrix.target == 'x86_64-unknown-linux-gnu'

      - name: Install libxml2
        run: |
          sudo dpkg --add-architecture armhf
          sudo apt-get install -y libxml2-dev:armhf
          export SYSROOT=/usr/arm-linux-gnueabihf
          export PKG_CONFIG_ALLOW_CROSS=1
          export PKG_CONFIG_LIBDIR=/usr/lib/arm-linux-gnueabihf/pkgconfig
          export PKG_CONFIG_SYSROOT_DIR=${SYSROOT}
          export PKG_CONFIG_SYSTEM_LIBRARY_PATH=/usr/lib/arm-linux-gnueabihf
          export PKG_CONFIG_SYSTEM_INCLUDE_PATH=/usr/arm-linux-gnueabihf/include
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'

      - name: Checkout source
        uses: actions/checkout@v2
          
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target=${{ matrix.target }}

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Install libxml2
        run: sudo apt-get install -y libxml2-dev

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Cargo Fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - name: Install libxml2
        run: sudo apt-get install -y libxml2-dev

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cargo Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings


